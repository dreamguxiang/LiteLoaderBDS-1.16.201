// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class AppPlatformWindows {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_APPPLATFORMWINDOWS
public:
    class AppPlatformWindows& operator=(class AppPlatformWindows const &) = delete;
    AppPlatformWindows(class AppPlatformWindows const &) = delete;
    AppPlatformWindows() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_APPPLATFORMWINDOWS
    MCVAPI bool allowContentLogWriteToDisk();
    MCVAPI unsigned __int64 calculateAvailableDiskFreeSpace(class Core::Path const &);
    MCVAPI bool canAppSelfTerminate() const;
    MCVAPI class Core::PathBuffer<std::string> copyImportFileToTempFolder(class Core::Path const &);
    MCVAPI class Core::PathBuffer<std::string> getCurrentStoragePath() const;
    MCVAPI class Core::PathBuffer<std::string> getExternalStoragePath() const;
    MCVAPI std::string getFeedbackHelpLink() const;
    MCVAPI unsigned __int64 getHighPerformanceThreadsCount() const;
    MCVAPI class Core::PathBuffer<std::string> getInternalStoragePath() const;
    MCVAPI class MPMCQueue<class std::function<void (void)>> & getMainThreadQueue();
    MCVAPI class Core::PathBuffer<std::string> getPackagedShaderCachePath();
    MCVAPI bool getPlatformTTSEnabled() const;
    MCVAPI bool getPlatformTTSExists() const;
    MCVAPI class Core::PathBuffer<std::string> getPlatformTempPath() const;
    MCVAPI unsigned __int64 getTotalHardwareThreadsCount() const;
    MCVAPI class Core::PathBuffer<std::string> getUserdataPath() const;
    MCVAPI void queueForMainThread_DEPRECATED(class std::function<void (void)>);
    MCVAPI bool supportsScripting() const;
    MCVAPI ~AppPlatformWindows();
#endif

};