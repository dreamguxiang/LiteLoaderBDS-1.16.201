// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class ItemDescriptor {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ITEMDESCRIPTOR
public:
    class ItemDescriptor& operator=(class ItemDescriptor const &) = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ITEMDESCRIPTOR
#endif
    MCAPI ItemDescriptor(class ItemDescriptor const &);
    MCAPI ItemDescriptor(class ItemDescriptor &&);
    MCAPI ItemDescriptor(class Item const &, int);
    MCAPI ItemDescriptor(class BlockLegacy const &);
    MCAPI ItemDescriptor(class Block const &);
    MCAPI ItemDescriptor();
    MCAPI short getAuxValue() const;
    MCAPI short getId() const;
    MCAPI class Item const * getItem() const;
    MCAPI std::string getRawNameId() const;
    MCAPI bool isNull() const;
    MCAPI void operator=(class ItemDescriptor &&);
    MCAPI void operator=(class ItemDescriptor const &);
    MCAPI bool sameItemAndAux(class ItemDescriptor const &) const;
    MCAPI bool sameItemAndAux(class ItemStack const &) const;
    MCAPI class std::optional<class CompoundTag> save() const;
    MCAPI bool serialize(class Serializer &, struct SerializerTraits &);
    MCAPI ~ItemDescriptor();
    MCAPI static class std::optional<class ItemDescriptor> fromTag(class CompoundTag const *);
    MCAPI static class ItemDescriptor fromTagExpression(std::string const &);

//private:
    MCAPI bool _hasTagOfItem(class Item const *) const;
    MCAPI void _initFromBlockLegacy(class BlockLegacy const &, class WeakPtr<class Item>) const;
    MCAPI void _initFromItem(class WeakPtr<class Item>, short) const;
    MCAPI void _resolveImpl() const;

private:

};