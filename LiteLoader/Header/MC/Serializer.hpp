// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class Serializer {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SERIALIZER
public:
    class Serializer& operator=(class Serializer const &) = delete;
    Serializer(class Serializer const &) = delete;
#endif

public:
    /*0*/ virtual ~Serializer();
    /*1*/ virtual void __unk_vfn_1();
    /*2*/ virtual void __unk_vfn_2();
    /*3*/ virtual void __unk_vfn_3();
    /*4*/ virtual void __unk_vfn_4();
    /*5*/ virtual void __unk_vfn_5();
    /*6*/ virtual void __unk_vfn_6();
    /*7*/ virtual void __unk_vfn_7();
    /*8*/ virtual void __unk_vfn_8();
    /*9*/ virtual void __unk_vfn_9();
    /*10*/ virtual void __unk_vfn_10();
    /*11*/ virtual void __unk_vfn_11();
    /*12*/ virtual void __unk_vfn_12();
    /*13*/ virtual void __unk_vfn_13();
    /*14*/ virtual void __unk_vfn_14();
    /*15*/ virtual bool serializeEnum(unsigned char &, struct SerializerTraits const &);
    /*16*/ virtual bool serializeEnum(unsigned short &, struct SerializerTraits const &);
    /*17*/ virtual bool serializeEnum(unsigned int &, struct SerializerTraits const &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SERIALIZER
    MCVAPI bool beginArray(unsigned __int64 &);
    MCVAPI bool beginArrayItem(unsigned __int64);
    MCVAPI bool beginMember(char const *, bool);
    MCVAPI bool beginMember(unsigned __int64, std::string &);
    MCVAPI bool beginObject();
    MCVAPI bool beginObject(unsigned __int64 &);
    MCVAPI bool endArray();
    MCVAPI bool endArrayItem();
    MCVAPI bool endMember();
    MCVAPI bool endObject();
    MCVAPI bool isArray() const;
    MCVAPI bool isBool() const;
    MCVAPI bool isInt() const;
    MCVAPI bool isObject() const;
    MCVAPI bool isString() const;
    MCVAPI bool serializeBool(bool &);
    MCVAPI bool serializeFloat(float &);
    MCVAPI bool serializeS16(short &);
    MCVAPI bool serializeS32(int &);
    MCVAPI bool serializeS8(signed char &);
    MCVAPI bool serializeString(std::string &);
    MCVAPI bool serializeU16(unsigned short &);
    MCVAPI bool serializeU32(unsigned int &);
    MCVAPI bool serializeU8(unsigned char &);
#endif
    MCAPI Serializer();
    MCAPI bool serialize(class entt::meta_any);
    MCAPI bool serializeField(class entt::meta_any, struct SerializerTraits &);
    MCAPI bool serializeFields(class entt::meta_any);

};