// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "RakNet.hpp"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class LevelData {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_LEVELDATA
public:
    class LevelData& operator=(class LevelData const &) = delete;
    LevelData(class LevelData const &) = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_LEVELDATA
#endif
    MCAPI LevelData(class LevelSettings const &, std::string const &, enum GeneratorType, class BlockPos const &, bool, enum EducationEditionOffer, float, float);
    MCAPI LevelData();
    MCAPI struct LevelDataValue const * _getValue(class HashedString const &) const;
    MCAPI bool achievementsWillBeDisabledOnLoad() const;
    MCAPI std::unique_ptr<class CompoundTag> createTag() const;
    MCAPI class BaseGameVersion const & getBaseGameVersion() const;
    MCAPI enum GameType getGameType() const;
    MCAPI enum GeneratorType getGenerator() const;
    MCAPI unsigned int getSeed() const;
    MCAPI class BlockPos const & getSpawnPos() const;
    MCAPI void getTagData(class CompoundTag const &);
    MCAPI class LevelData & operator=(class LevelData &&);
    MCAPI void setEducationOid(std::string const &);
    MCAPI void setGameType(enum GameType);
    MCAPI void setGenerator(enum GeneratorType);
    MCAPI void setSeed(unsigned int);
    MCAPI void setSpawnPos(class BlockPos const &);
    MCAPI void setTagData(class CompoundTag &) const;
    MCAPI void touchLastLoadedWithVersion();
    MCAPI void v1_read(class RakNet::BitStream &, enum StorageVersion);
    MCAPI ~LevelData();

//private:
    MCAPI struct LevelDataValue * _getValue(class HashedString const &);

private:

};