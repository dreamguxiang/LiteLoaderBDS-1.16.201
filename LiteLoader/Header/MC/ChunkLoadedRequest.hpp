// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class ChunkLoadedRequest {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_CHUNKLOADEDREQUEST
public:
    class ChunkLoadedRequest& operator=(class ChunkLoadedRequest const &) = delete;
    ChunkLoadedRequest(class ChunkLoadedRequest const &) = delete;
    ChunkLoadedRequest() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_CHUNKLOADEDREQUEST
#endif
    MCAPI ChunkLoadedRequest(std::string const &, std::unique_ptr<class IChunkLoadedAction>);
    MCAPI ChunkLoadedRequest(struct Bounds const &, std::unique_ptr<class IChunkLoadedAction>, bool);
    MCAPI ChunkLoadedRequest(class ChunkLoadedRequest &&);
    MCAPI enum ChunksLoadedStatus areAllChunksLoaded(class Dimension &, __int64) const;
    MCAPI enum ChunksLoadedStatus areAllChunksLoadedOnChunkLoaded(class ChunkSource &, class LevelChunk &, __int64) const;
    MCAPI class CompoundTag serialize(enum ChunkRequestListType);
    MCAPI ~ChunkLoadedRequest();
    MCAPI static enum ChunksLoadedStatus areAllChunksLoaded(class ChunkSource &, struct Bounds const &, bool);
    MCAPI static enum ChunksLoadedStatus areAllChunksLoadedAndTicking(class ChunkSource &, struct Bounds const &, bool, __int64);
    MCAPI static bool isValidTag(class CompoundTag const &);
    MCAPI static struct DeserializedChunkLoadedRequest load(std::string const &, class CompoundTag const &, std::string const &);

//private:
    MCAPI class ITickingAreaView const * _getTickingArea(class Dimension const &) const;

private:

};