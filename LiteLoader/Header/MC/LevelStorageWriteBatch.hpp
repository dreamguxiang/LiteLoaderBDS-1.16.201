// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class LevelStorageWriteBatch {

#define AFTER_EXTRA
    // Add Member There
public:
    struct BatchEntry {
        BatchEntry() = delete;
        BatchEntry(BatchEntry const&) = delete;
        BatchEntry(BatchEntry const&&) = delete;
    };
#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_LEVELSTORAGEWRITEBATCH
public:
    class LevelStorageWriteBatch& operator=(class LevelStorageWriteBatch const &) = delete;
    LevelStorageWriteBatch(class LevelStorageWriteBatch const &) = delete;
#endif

public:
    /*0*/ virtual ~LevelStorageWriteBatch();
    /*1*/ virtual void putKey(std::string const &, class gsl::basic_string_span<char const, -1>);
    /*2*/ virtual void putKey(std::string const &, std::string const &);
    /*3*/ virtual void putKey(std::string const &, std::string &&);
    /*4*/ virtual void putKey(std::string const &, class std::shared_ptr<std::string>);
    /*5*/ virtual void deleteKey(std::string const &);
    /*6*/ virtual void flush(class LevelStorage &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_LEVELSTORAGEWRITEBATCH
#endif
    MCAPI LevelStorageWriteBatch();
    MCAPI void clear();

//private:
    MCAPI void _writeKey(std::string const &, class std::shared_ptr<std::string> &&);

private:

};