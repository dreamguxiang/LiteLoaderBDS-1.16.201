// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class SemVersion {

#define AFTER_EXTRA
public:
    enum class MatchType : int {
        Full = 0x0,
        Partial = 0x1,
        None = 0x2,
    };
    enum class ParseOption : int {
        AllowWildcards = 0x0,
        NoWildcards = 0x1,
    };
    struct any_version_constructor {
    };
    unsigned __int16 mMajor;
    unsigned __int16 mMinor;
    unsigned __int16 mPatch;
    std::string mPreRelease;
    std::string mBuildMeta;
    std::string mFullVersionString;
    bool mValidVersion;
    bool mAnyVersion;
#undef AFTER_EXTRA
public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SEMVERSION
#endif
    MCAPI SemVersion(struct SemVersion::any_version_constructor);
    MCAPI SemVersion();
    MCAPI SemVersion(class SemVersion const &);
    MCAPI bool operator<(class SemVersion const &) const;
    MCAPI bool operator<=(class SemVersion const &) const;
    MCAPI class SemVersion & operator=(class SemVersion const &);
    MCAPI bool operator==(class SemVersion const &) const;
    MCAPI ~SemVersion();
    MCAPI static enum class SemVersion::MatchType fromJson(class Json::Value const &, class SemVersion &, enum class SemVersion::ParseOption);
    MCAPI static enum class SemVersion::MatchType fromJsonArray(class Json::Value const &, class SemVersion &);
    MCAPI static enum class SemVersion::MatchType fromString(std::string const &, class SemVersion &, enum class SemVersion::ParseOption);

//private:
    MCAPI void _parseVersionToString();

private:

};