// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class BlockTickingQueue {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BLOCKTICKINGQUEUE
public:
    class BlockTickingQueue& operator=(class BlockTickingQueue const &) = delete;
    BlockTickingQueue(class BlockTickingQueue const &) = delete;
    BlockTickingQueue() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_BLOCKTICKINGQUEUE
#endif
    MCAPI void add(class BlockSource &, class BlockPos const &, class Block const &, int, int);
    MCAPI void eliminateDuplicatesOf(class BlockLegacy const &);
    MCAPI void load(class CompoundTag const &, class BlockPalette const &);
    MCAPI void save(class CompoundTag &) const;
    MCAPI void tickAllPendingTicks(class BlockSource &);
    MCAPI bool tickPendingTicks(class BlockSource &, struct Tick const &, int, bool);
    MCAPI ~BlockTickingQueue();

//protected:
    MCAPI void _saveQueue(class ListTag &, class BlockTickingQueue::TickDataSet const &) const;

//private:
    MCAPI void _addToNextTickQueue(class BlockPos const &, class Block const &, int, int);

protected:

private:

};