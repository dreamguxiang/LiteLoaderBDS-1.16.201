// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class ChemistryStickItem {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_CHEMISTRYSTICKITEM
public:
    class ChemistryStickItem& operator=(class ChemistryStickItem const &) = delete;
    ChemistryStickItem(class ChemistryStickItem const &) = delete;
    ChemistryStickItem() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_CHEMISTRYSTICKITEM
    MCVAPI void fixupCommon(class ItemStackBase &) const;
    MCVAPI void hurtActor(class ItemStack &, class Actor &, class Mob &) const;
    MCVAPI bool inventoryTick(class ItemStack &, class Level &, class Actor &, int, bool) const;
    MCVAPI bool isValidRepairItem(class ItemStackBase const &, class ItemStackBase const &) const;
    MCVAPI bool mineBlock(class ItemStack &, class Block const &, int, int, int, class Actor *) const;
    MCVAPI class Item & setMaxDamage(int);
    MCVAPI bool showsDurabilityInCreative() const;
    MCVAPI bool uniqueAuxValues() const;
    MCVAPI class ItemStack & use(class ItemStack &, class Player &) const;
    MCVAPI enum class ItemUseMethod useTimeDepleted(class ItemStack &, class Level *, class Player *) const;
    MCVAPI ~ChemistryStickItem();
#endif

//protected:
    MCAPI bool _tick(class ItemStack &, unsigned __int64) const;

//private:
    MCAPI void _storeActivationTimestamp(class ItemStack &, unsigned __int64, int) const;

protected:

private:
    MCAPI static std::string const ACTIVATION_TIMESTAMP_TAG;
    MCAPI static int const ACTIVE_BIT;
    MCAPI static int const COLOR_BITS;
    MCAPI static int const COLOR_MASK;
    MCAPI static int const DAMAGE_BITS;
    MCAPI static int const DAMAGE_MASK;

};