// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here
// TODO: Need to verify
#undef BEFORE_EXTRA

enum class AnimationMode : unsigned char {
    None = 0x0,
    Layers = 0x1,
    Blocks = 0x2,
};

class StructureSettings {

#define AFTER_EXTRA
// Add Member There
private:
    std::string mPaletteName;
    bool mIgnoreEntities;
    bool mReloadActorEquipment;
    bool mIgnoreBlocks;
    bool mIgnoreJigsawBlocks;
    BlockPos mStructureSize;
    BlockPos mStructureOffset;
    Vec3 mPivot;
    ActorUniqueID mLastTouchedByPlayer;
    Rotation mRotation;
    Mirror mMirror;
    AnimationMode mAnimationMode;
    unsigned int mAnimationTicks;
    float mIntegrityValue;
    unsigned int mIntegritySeed;

// public:
// inline StructureSettings(BlockPos const& size, bool ignoreEntities, bool ignoreBlocks)
//     : StructureSettings()
// {
//     setIgnoreBlocks(ignoreBlocks);
//     setIgnoreEntities(ignoreEntities);
//     setStructureSize(size);
// };
public:
    inline void setIgnoreBlocks(bool a0){
        this->mIgnoreBlocks = a0;
    };
    inline void setIgnoreEntities(bool a0){
        this->mIgnoreEntities = a0;
    };
    inline void setStructureSize(class BlockPos const & bp){
        this->mStructureSize = bp;
    };
    inline void setMirror(enum class Mirror a0){
        this->mMirror = a0;
    };
    inline void setRotation(enum class Rotation a0){
        this->mRotation = a0;
    };

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_STRUCTURESETTINGS
public:
    class StructureSettings& operator=(class StructureSettings const &) = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_STRUCTURESETTINGS
#endif
    MCAPI StructureSettings();
    MCAPI StructureSettings(class StructureSettings const &);
    MCAPI StructureSettings(class StructureSettings &&);
    MCAPI class StructureSettings & operator=(class StructureSettings &&);
    MCAPI ~StructureSettings();
    MCAPI static class BlockPos const DEFAULT_STRUCTURE_OFFSET;
    MCAPI static class BlockPos const DEFAULT_STRUCTURE_SIZE;

};

static_assert(sizeof(StructureSettings) == 0x60);