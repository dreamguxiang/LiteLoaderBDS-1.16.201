// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"
#include "Animal.hpp"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class Wolf : public Animal {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_WOLF
public:
    class Wolf& operator=(class Wolf const &) = delete;
    Wolf(class Wolf const &) = delete;
    Wolf() = delete;
#endif

public:
    /*7*/ virtual ~Wolf();
    /*32*/ virtual void __unk_vfn_32();
    /*40*/ virtual void normalTick();
    /*46*/ virtual void addRider(class Actor &);
    /*55*/ virtual void __unk_vfn_55();
    /*62*/ virtual void __unk_vfn_62();
    /*77*/ virtual void __unk_vfn_77();
    /*82*/ virtual void __unk_vfn_82();
    /*89*/ virtual void __unk_vfn_89();
    /*91*/ virtual void __unk_vfn_91();
    /*98*/ virtual void __unk_vfn_98();
    /*100*/ virtual void __unk_vfn_100();
    /*101*/ virtual void __unk_vfn_101();
    /*102*/ virtual void __unk_vfn_102();
    /*112*/ virtual void setSitting(bool);
    /*123*/ virtual void __unk_vfn_123();
    /*134*/ virtual void handleEntityEvent(enum ActorEvent, int);
    /*159*/ virtual bool load(class CompoundTag const &, class DataLoadHelper &);
    /*171*/ virtual void __unk_vfn_171();
    /*179*/ virtual void onSynchedDataUpdate(int);
    /*184*/ virtual void __unk_vfn_184();
    /*208*/ virtual void __unk_vfn_208();
    /*209*/ virtual void __unk_vfn_209();
    /*230*/ virtual void __unk_vfn_230();
    /*233*/ virtual void __unk_vfn_233();
    /*241*/ virtual void __unk_vfn_241();
    /*243*/ virtual bool _hurt(class ActorDamageSource const &, int, bool, bool);
    /*249*/ virtual void __unk_vfn_249();
    /*260*/ virtual void __unk_vfn_260();
    /*267*/ virtual enum LevelSoundEvent getAmbientSound();
    /*294*/ virtual void __unk_vfn_294();
    /*302*/ virtual bool isAlliedTo(class Mob *);
    /*303*/ virtual bool doHurtTarget(class Actor *);
    /*304*/ virtual void __unk_vfn_304();
    /*331*/ virtual void onBorn(class Actor &, class Actor &);
    /*338*/ virtual void __unk_vfn_338();
    /*347*/ virtual void newServerAiStep();
    /*354*/ virtual void __unk_vfn_354();
    /*355*/ virtual bool isDarkEnoughToSpawn() const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_WOLF
#endif

//private:
    MCAPI void _avoidSnowBury();
    MCAPI void _updateTintColor();

private:

};