// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Enchant.hpp"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class ItemEnchants {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ITEMENCHANTS
public:
    class ItemEnchants& operator=(class ItemEnchants const &) = delete;
    ItemEnchants(class ItemEnchants const &) = delete;
    ItemEnchants() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ITEMENCHANTS
#endif
    MCAPI bool addEnchant(class EnchantmentInstance, bool);
    MCAPI struct EnchantResult canEnchant(class EnchantmentInstance, bool);
    MCAPI std::vector<class EnchantmentInstance> getAllEnchants() const;
    MCAPI std::vector<std::string> getEnchantNames() const;
    MCAPI int getTotalValue(bool) const;
    MCAPI int hasEnchant(enum class Enchant::Type) const;
    MCAPI class ItemEnchants & operator=(class ItemEnchants &&);
    MCAPI void read(class ReadOnlyBinaryStream &);
    MCAPI ~ItemEnchants();

//private:
    MCAPI void _fromList(class ListTag const &);
    MCAPI std::unique_ptr<class ListTag> _toList() const;

private:

};