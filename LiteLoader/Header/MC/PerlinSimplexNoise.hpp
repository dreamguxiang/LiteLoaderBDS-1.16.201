// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
#include "SimplexNoise.hpp"
#undef BEFORE_EXTRA

class PerlinSimplexNoise {

#define AFTER_EXTRA
public:
    int mLevels;
    std::vector<SimplexNoise> mNoiseLevels;
    float mNormalizationFactor;
#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_PERLINSIMPLEXNOISE
public:
    class PerlinSimplexNoise& operator=(class PerlinSimplexNoise const &) = delete;
    PerlinSimplexNoise(class PerlinSimplexNoise const &) = delete;
    PerlinSimplexNoise() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_PERLINSIMPLEXNOISE
#endif
    MCAPI PerlinSimplexNoise(unsigned int, int);
    MCAPI float * getRegion(float *, class Vec2 const &, int, int, class Vec2 const &, float, float) const;
    MCAPI float getValue(float, float) const;
    MCAPI float getValue(class Vec3 const &) const;
    MCAPI ~PerlinSimplexNoise();

//private:
    MCAPI void _init(class Random &);

private:

};